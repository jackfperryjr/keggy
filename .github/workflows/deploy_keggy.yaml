name: deploy keggy
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Update and Restart Keggy
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASS }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          for pid in $(ps -ef |
            awk -v first="$1" -v second="$2" -v app="keggy.py" '
              $0 ~ first && $0 ~ second && $0 ~ app && !/awk/ {print $2}')
          do
            kill "$pid"
          done
          sleep 3
          cd keggy
          git pull -q 2>&1 | cat
          sleep 3
          nohup python3 keggy.py >/dev/null 2>&1 &
          exit

  publish_release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: "16.x"
    - name: Install dependencies
      run: npm install
    - name: Build
      run: npm run build
    - name: Set up Git
      run: |
        git config user.name "Keggy"
        git config user.email "keggy@kegerator.com"
    - name: Get Tag
      id: get_tag
      run: |
        git branch --show-current
        git pull
        echo "version=v$(npm pkg get version | tr -d '\"')" >> $GITHUB_OUTPUT
    - name: Tag the Commit
      run: |
        next_version=${{ steps.get_tag.outputs.version }}
        git tag -a "$next_version" -m "Version $next_version"
        git push --follow-tags
    - name: Create Changelog Diff
      id: changelog_diff
      run: |
        sed -n "/^## \[${{ steps.get_tag.outputs.version }}\]/,/^## \[$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))\]/{/^## \[$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))\]/!p;}" CHANGELOG.md > release_notes.md
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_tag.outputs.version }}
        release_name: Release ${{ steps.get_tag.outputs.version }}
        body_path: ./release_notes.md
        draft: false
        prerelease: false
    - name: Delete release_notes File
      run: rm release_notes.md
